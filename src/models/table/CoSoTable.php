<?php

namespace modava\iway\models\table;

use cheatsheet\Time;
use modava\iway\models\query\CoSoQuery;
use Yii;
use yii\db\ActiveRecord;

class CoSoTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;
    const CACHE_KEY_GET_ALL = 'redis-iway-co-so-get-all';

    public static function tableName()
    {
        return 'iway_co_so';
    }

    public static function find()
    {
        return new CoSoQuery(get_called_class());
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [
            self::CACHE_KEY_GET_ALL
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [
            self::CACHE_KEY_GET_ALL
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public static function getAll()
    {
        $cache = Yii::$app->cache;

        if ($cache->exists(self::CACHE_KEY_GET_ALL)) return $cache->get(self::CACHE_KEY_GET_ALL);

        $data = self::find()->published()->all();
        $cache->set(self::CACHE_KEY_GET_ALL, $data);

        return $data;
    }
}
